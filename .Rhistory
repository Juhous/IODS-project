b <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname() %>% data.frame()
rbind(a,b)
}
if(is.factor(x)) {
b <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
rbind(a,b)
}
return(a)
})
sapply(df, function(x) {
a <- data.frame()
if(!is.factor(x)) {
b <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname() %>% data.frame()
a <- rbind(a,b)
}
if(is.factor(x)) {
b <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
a <- rbind(a,b)
}
return(a)
})
sapply(df, function(x) {
if(!is.factor(x)) {
b <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname() %>% data.frame()
}
if(is.factor(x)) {
b <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
}
return(b)
})
sapply(df, function(x) {
if(!is.factor(x)) {
b <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
b <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
}
return(b)
})
sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
}
return(a)
})
sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
}
return(a)
}) %>% row.names(c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max"))
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
j <- sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:5, function(y) sum(x == y)) %>% as.character()
}
return(a)
})
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
j <- sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:5, function(y) paste(levels(x)[y], sum(x == y), sep = ": "))
}
return(a)
})
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
j <- sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:5, function(y)
paste(levels(x)[y+1], sum(x == y), sep = ": "))
}
return(a)
})
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
j <- sapply(df, function(x) {
if(!is.factor(x)) {
a <- c(quantile(x, probs = c(0,0.25,0.5)),
mean(x),
quantile(x, probs = c(0.75,1))) %>%
formatC(format = "f") %>% unname()
}
if(is.factor(x)) {
a <- sapply(0:4, function(y)
paste(levels(x)[y+1], sum(x == y), sep = ": "))
a <- c("Levels", a)
}
return(a)
})
row.names(j) <- c("Min", "1st Quant", "Median", "Mean", "3rd Quant", "Max")
j
?row.names
source(summaryKable)
source(summaryKable.R)
source("summaryKable.R")
source("summaryKable.R")
table(dim(train), dim(test))
dim(train), dim(test)
dim(test)
data.frame(dim(train),dim(test))
table(summary(dist(Boston)), summary(dist(df)))
data.frame(summary(dist(Boston)), summary(dist(df)))
dist(df) %>% summary %>% str()
data.frame(a,b)
a <- dist(Boston) %>% summary
b <- dist(df) %>% summary %>% str()
data.frame(a,b)
table(a,b)
a <- dist(Boston) %>% summary
b <- dist(df) %>% summary
table(a,b)
as.data.frame(a,b)
as.matrix(a,b)
a <- dist(Boston) %>% summary
b <- dist(df) %>% summary
as.matrix(a,b)
a
as.matrix(c(a,b))
as.matrix(a)
as.matrix(a,b)
cbind(a,b)
cbind(summary(dist(Boston)) summary(dist(df)))
cbind(summary(dist(Boston)), summary(dist(df)))
cbind(Bost = summary(dist(Boston)), df = summary(dist(df)))
cbind(Bost = summary(dist(Boston)), df = summary(dist(df))) %>% t()
qplot(df$crim, df$zn)
df <- mutate_at(df, vars(-chas), funs(scale))
df$crim <- ntile(df$crim, 4) %>%
factor(labels = c("low", "med-lo", "med-hi", "high"))
table(df$crim)
attributes(df)
sapply(df, attributes)
sapply(df, scale)
df %>% select(-chas) %>% sapply(scale)
df
df
df
df %>% select(-chas) %>% sapply(scale)
select(df,-chas) %>% sapply(scale)
dplyr::select(df,-chas) %>% sapply(scale)
dplyr::select(df, -chas)
df <- Boston %>% tbl_df() %>%
mutate_at(vars(chas), funs(as.factor))
df
dplyr::select(df, -chas) sapply(scale)
dplyr::select(df, -chas) %>% sapply(scale)
df %>% select(-chas) %>% sapply(scale)
library(dplyr)
df %>% select(-chas) %>% sapply(scale)
df %>% select(.,-chas) %>% sapply(scale)
select(df,-chas) %>% sapply(scale)
dplyr::select(df,-chas) %>% sapply(scale)
library(dplyr)
dplyr::select(df,-chas) %>% sapply(scale)
select(df,-chas) %>% sapply(scale)
?select
library("plotly", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
detach("package:plotly", unload=TRUE)
library(dplyr)
detach("package:dplyr", unload=TRUE)
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
df %>% select(-chas) %>% sapply(scale)
df %>% sapply(function(x) if(numeric) scale(x))
df %>% sapply(function(x) if(is.numeric(x)) scale(x))
df %>% sapply(function(x) if(is.numeric(x)) return(scale(x)))
?scale
df %>% sapply(function(x) if(is.numeric(x)) scale(x) else x)
df
df %>% sapply(function(x) if(is.numeric(x)) scale(x) else x)
df
df$chas
df %>% sapply(function(x) if(is.numeric(x)) {scale(x)} else x)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else x
})
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
})
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% table(.$chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% table(.[3])
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% table(.[4])
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% table(.[4,])
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% table(.)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
})$chas
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
})[4]
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
})[4,]
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% select(chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
else return(x)
}) %>% as.data.frame() %>% select(chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
}) %>% as.data.frame() %>% select(chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
})
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
}) %>% as.data.frame() %>% table(.$chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
}) %>% as.data.frame() %>% table(.[4])
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
}) %>% as.data.frame() %>% table(.$chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(x)
}) %>% as.data.frame() %>% select(chas) %>% table
df$chas
df$chas
df[[4]]
as.numeric(df$chas)
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(factor(x))
}) %>% as.data.frame() %>% select(chas) %>% table
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(factor(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
if(is.factor(x)) as.factor(x)
})
df %>% sapply(function(x) {
if(is.numeric(x)) return(scale(x))
if(is.factor(x)) return(as.factor(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) return(scale(x))
if(is.factor(x)) return(factor(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(factor(x)))
}) %>% as.data.frame()
return(factor(x))
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
return(factor(x))
}) %>% as.data.frame()
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
)}
df %>% sapply(function(x) {
if(is.numeric(x)) scale(x)
})
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
else return(x)
})
else return(as.vector(x))
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
else return(as.vector(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
else return(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
else return(x)
})
mutate_at(df, vars(-chas), funs(scale, as.vector))
mutate_at(df, vars(-chas), funs(scale, as.vector)) %>% sapply(attributes)
mutate_at(df, vars(-chas), funs(scale)) %>% sapply(attributes)
mutate_at(df, vars(-chas), funs(scale)) %>% as.vector()
mutate_at(df, vars(-chas), funs(scale)) %>% as.vector() %>% sapply(attributes)
mutate_at(df, vars(-chas), funs(scale)) %>% sapply(as.vector)
?mutate_at
mutate_at(df, vars(-chas), funs(as.vector(scale)))
df %>% sapply(function(x) {
if(is.numeric(x)) as.vector(scale(x))
else return(x)
})
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
})
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% sapply(attributes)
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% as.data.frame() %>% sapply(attributes)
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% as.data.frame()
df %>% vapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% as.data.frame()
df %>% vapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
})
?vapply
df %>% vapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% class()
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
}) %>% class()
mutate_at(df, vars(-chas), funs(scale)) %>%  mutate_at(vars(-chas), funs(as.vector)
df$chas
df %>% sapply(function(x) {
if(is.numeric(x)) return( as.vector(scale(x)))
if(is.factor(x)) return(as.factor(x))
})
df$crim <- ntile(df$crim, 4) %>%
factor(labels = c("low", "med-lo", "med-hi", "high"))
table(df$crim)
summaryKable(df) %>% kable
```
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(., vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(as.vector))
df <- Boston %>% tbl_df() %>%
mutate_at(vars(chas), funs(as.factor))
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(df, vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector)) %>% sapply(attributes)
mutate_at(df, vars(-chas), funs(c(scale, as.vector)))
df
?mutate_at
?funs
df %<>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df$crim <- ntile(df$crim, 4) %>%
factor(labels = c("low", "med-lo", "med-hi", "high"))
table(df$crim)
summaryKable(df) %>% kable
source("helper_functions.R")
data("Boston")
df <- Boston
df <- mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
cbind(Bost = summary(dist(Boston)), df = summary(dist(df))) %>% t()
df <- mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df
df <- mutate_at(df, vars(-chas), funs(scale))
df <- Boston
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(scale))
mutate_at(df, vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
mutate_at(df, vars(-chas), funs(scale)) %>% sapply(attributes)
data("Boston")
df <- Boston %>% tbl_df() %>%
mutate_at(vars(chas), funs(as.factor))
df %<>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df <- Boston
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df
head(df)
str(df)
df %>% mutate_at(vars(-chas), funs(scale))
df %>% mutate_at(vars(-chas), funs(scale))
df %>% mutate_at(vars(-chas), funs(scale)) %>% head()
df %>% mutate_at(vars(-chas), funs(scale)) %>% str
df <- Boston %>% tbl_df() %>%
mutate_at(vars(chas), funs(as.factor))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
data("Boston")
df <- Boston
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
select(vars(-chas))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
select(-chas)
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(mean))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(max))
df %>% mutate_at(vars(-chas), funs(scale))
str(df)
df <- Boston %>% tbl_df() %>%
mutate_at(vars(chas), funs(as.factor))
str(df
)
df %>% mutate_at(vars(-chas), funs(scale))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(., vars(-chas), funs(as.vector))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(., vars(-chas), funs(as.vector))
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
data("Boston")
df <- Boston
str(df)
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
df <- Boston %>% tbl_df
str(df)
df %>% mutate_at(vars(-chas), funs(scale)) %>%
mutate_at(vars(-chas), funs(as.vector))
cbind(Bost = summary(dist(Boston)), df = summary(dist(df))) %>% t()
km <- kmeans(df, centers = 3)
twcss <- sapply(1:20, function(k) kmeans(df, k)$tot.withinss)
qplot(x = 1:20, y = twcss, geom = 'line')
data.frame(dim(model_predictors), dim(lda.fit$scaling))
c(dim(model_predictors), dim(lda.fit$scaling))
data.frame
data.frame(dim(model_predictors), dim(lda.fit$scaling))
data.frame(dim(model_predictors), dim(lda.fit$scaling))
